{"version":3,"sources":["components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","store/contactSlice.js","store/index.js","components/Container/Container.js","components/ContactForm/ContactForm.js","store/contactsSelectors.js","components/Filter/Filter.js","components/ContactList/ContactList.js","App.js","index.js","components/ContactForm/ContactForm.module.css"],"names":["module","exports","BASE_URL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","dispatch","fetch","response","ok","Error","json","data","message","removeContact","id","method","deleteContact","addContact","contactNew","headers","body","JSON","stringify","addContactNew","setError","state","action","status","error","payload","setPending","contactSlice","createSlice","name","initialState","contacts","filter","reducers","changeFilter","extraReducers","pending","fulfilled","rejected","actions","configureStore","reducer","contactReducer","Container","title","children","className","s","container","ContactForm","useState","setName","phone","setPhone","useSelector","useDispatch","handleChange","e","target","value","reset","onSubmit","preventDefault","newContact","some","contact","includes","alert","contactForm","label","input","type","autoComplete","onChange","placeholder","pattern","required","submitButton","getContacts","getFilter","Filter","currentTarget","ContactList","useEffect","normalizedFilter","toLowerCase","visibleContacts","list","length","map","item","buttonDelete","onClick","color","size","App","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,KAAO,0BAA0B,KAAO,0BAA0B,aAAe,oC,mBCAnGD,EAAOC,QAAU,CAAC,UAAY,+B,mBCA9BD,EAAOC,QAAU,CAAC,MAAQ,wB,4KCCpBC,EAAW,2DAEJC,EAAgBC,YAC3B,yBAD2C,uCAG3C,WAAgBC,EAAhB,sBAAAC,EAAA,6DAAqBC,EAArB,EAAqBA,gBAArB,EAAsCC,SAAtC,kBAG2BC,MAAMP,GAHjC,WAGUQ,EAHV,QAIkBC,GAJlB,sBAKY,IAAIC,MAAM,iBALtB,uBAOuBF,EAASG,OAPhC,cAOUC,EAPV,yBAQWA,GARX,2DAWWP,EAAgB,KAAMQ,UAXjC,0DAH2C,yDAmBhCC,EAAgBZ,YAC3B,kBAD2C,uCAG3C,WAAgBa,EAAhB,oBAAAX,EAAA,6DAAsBC,EAAtB,EAAsBA,gBAAiBC,EAAvC,EAAuCA,SAAvC,kBAG2BC,MAAM,GAAD,OAAIP,EAAJ,YAAgBe,GAAM,CAChDC,OAAQ,WAJd,iBAOkBP,GAPlB,sBAQY,IAAIC,MAAM,sCARtB,cAWIJ,EAASW,EAAcF,IAX3B,kBAaWA,GAbX,2DAgBWV,EAAgB,KAAMQ,UAhBjC,0DAH2C,yDAwBhCK,EAAahB,YACxB,sBADwC,uCAGxC,WAAgBiB,EAAhB,wBAAAf,EAAA,6DAA8BC,EAA9B,EAA8BA,gBAAiBC,EAA/C,EAA+CA,SAA/C,kBAG2BC,MAAMP,EAAU,CACrCgB,OAAQ,OACRI,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUJ,KAN3B,WAGUX,EAHV,QASkBC,GATlB,sBAUY,IAAIC,MAAM,oCAVtB,uBAauBF,EAASG,OAbhC,cAaUC,EAbV,OAcIN,EAASkB,EAAcZ,IAd3B,kBAeWA,GAfX,2DAkBWP,EAAgB,KAAMQ,UAlBjC,0DAHwC,yDA6CpCY,EAAW,SAACC,EAAOC,GACvBD,EAAME,OAAS,WACfF,EAAMG,MAAQF,EAAOG,SAEjBC,EAAa,SAAAL,GAEjBA,EAAMG,MAAQ,MAGVG,EAAeC,YAAY,CAC/BC,KAAM,WACNC,aAAc,CACZC,SAAU,GACVC,OAAQ,GACRT,OAAQ,KACRC,MAAO,MAGTS,SAAU,CACRd,cADQ,SACME,EAAOC,GACnBD,EAAMU,SAAN,CAAkBT,EAAOG,SAAzB,mBAAqCJ,EAAMU,YAG7CnB,cALQ,SAKMS,EAAOC,GACnBD,EAAMU,SAAWV,EAAMU,SAASC,QAAO,qBAAGtB,KAAgBY,EAAOG,YAGnES,aATQ,SASKb,EAAOC,GAClBD,EAAMW,OAASV,EAAOG,UAI1BU,eAAa,mBACVvC,EAAcwC,QAAUV,GADd,cAEV9B,EAAcyC,WAAY,SAAChB,EAAOC,GACjCD,EAAMU,SAAWT,EAAOG,QACxBJ,EAAME,OAAS,WACfF,EAAMG,MAAQ,QALL,cAOV5B,EAAc0C,SAAWlB,GAPf,cASVP,EAAWuB,QAAUV,GATX,cAUVb,EAAWwB,WAAY,SAAUhB,EAAOC,GACvCD,EAAME,OAAS,WACfF,EAAMG,MAAQ,QAZL,cAcVX,EAAWyB,SAAWlB,GAdZ,cAgBVX,EAAc2B,QAAUV,GAhBd,cAiBVjB,EAAc4B,WAAY,SAAAhB,GACzBA,EAAME,OAAS,WACfF,EAAMG,MAAQ,QAnBL,cAqBVf,EAAc6B,SAAWlB,GArBf,KA6ER,EAIHO,EAAaY,QAHfpB,EADK,EACLA,cACAP,EAFK,EAELA,cACAsB,EAHK,EAGLA,aAEaP,IAAf,QC1Mea,cAAe,CAC5BC,QAAS,CACPV,SAAUW,K,gCCYCC,MAff,YAAyC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SAC1B,OACE,sBAAKC,UAAWC,IAAEC,UAAlB,UACE,mCAAMJ,KAELC,M,wBCuFQI,MAxFf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOrB,EAAP,KAAasB,EAAb,KACA,EAA0BD,mBAAS,IAAnC,mBAAOE,EAAP,KAAcC,EAAd,KACMtB,EAAWuB,aAAY,SAAAjC,GAAK,OAAIA,EAAMU,SAASA,YAE/C9B,EAAWsD,cAEjB,SAASC,EAAaC,GACpB,MAAwBA,EAAEC,OAAlB7B,EAAR,EAAQA,KAAM8B,EAAd,EAAcA,MAEd,OAAQ9B,GACN,IAAK,OACHsB,EAAQQ,GACR,MAEF,IAAK,QACHN,EAASM,GACT,MAEF,QACE,QAIN,IAAMC,EAAQ,WACZT,EAAQ,IACRE,EAAS,KAuBX,OACE,uBAAMQ,SArBa,SAAAJ,GACnBA,EAAEK,iBAEF,IAAMC,EAAa,CACjBlC,KAAMA,EACNuB,MAAOA,GAGT,GAAIrB,GACEA,EAASiC,MAAK,SAAAC,GAAO,OAAIA,EAAQpC,KAAKqC,SAASrC,MAGjD,OAFAsC,MAAM,GAAD,OAAItC,EAAJ,kCACL+B,IAKJ3D,EAASY,EAAWkD,IACpBH,KAI8Bd,UAAWC,IAAEqB,YAA3C,UACE,wBAAOtB,UAAWC,IAAEsB,MAApB,kBAEE,uBACEvB,UAAWC,IAAEuB,MACbC,KAAK,OACL1C,KAAK,OACL2C,aAAa,MACbb,MAAO9B,EACP4C,SAAUjB,EACVkB,YAAY,WACZC,QAAQ,yHACR/B,MAAM,kcACNgC,UAAQ,OAIZ,wBAAO9B,UAAWC,IAAEsB,MAApB,mBAEE,uBACEvB,UAAWC,IAAEuB,MACbC,KAAK,MACL1C,KAAK,QACL2C,aAAa,MACbb,MAAOP,EACPqB,SAAUjB,EACVkB,YAAY,YACZC,QAAQ,yFACR/B,MAAM,giBACNgC,UAAQ,OAIZ,uBAAO9B,UAAWC,IAAE8B,aAAcN,KAAK,SAASZ,MAAM,oBC1F/CmB,EAAc,SAAAzD,GAAK,OAAIA,EAAMU,SAASA,UACtCgD,EAAY,SAAA1D,GAAK,OAAIA,EAAMU,SAASC,Q,iBC8BlCgD,EAxBA,WAGX,IAAM/E,EAAWsD,cACXvB,EAASsB,YAAYyB,GAE3B,OACE,yDAEE,uBACEjC,UAAWC,IAAEuB,MACbC,KAAK,OACL1C,KAAK,SACL2C,aAAa,MACbb,MAAO3B,EACPyC,SAAU,SAAAhB,GAAC,OAAIxD,EAASiC,EAAauB,EAAEwB,cAActB,SACrDgB,QAAQ,yHACR/B,MAAM,kcACNgC,UAAQ,Q,yBC8BHM,MA9Cf,WACE,MAA0B5B,aAAY,SAAAjC,GAAK,OAAIA,EAAMU,YAA7CR,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,MAEVO,EAAWuB,YAAYwB,GACvB9C,EAASsB,YAAYyB,GAErB9E,EAAWsD,cAEjB4B,qBAAU,WACRlF,EAASL,OAER,IAEH,IAAMwF,EAAmBpD,EAAOqD,cAC1BC,EAAkBvD,EAASC,QAAO,SAAAiC,GAAO,OAC7CA,EAAQpC,KAAKwD,cAAcnB,SAASkB,MAItC,OACE,gCACc,YAAX7D,GAAwB,yCACb,aAAXA,GAAyB,uCAAUC,KAEpC,oBAAIsB,UAAWC,IAAEwC,KAAjB,SACGxD,EAASyD,OAAS,GACjBF,EAAgBG,KAAI,SAAAxB,GAAO,OACzB,qBAAInB,UAAWC,IAAE2C,KAAjB,UACE,8BACE,iCAAOzB,EAAQpC,KAAf,OADF,IAC+B,+BAAOoC,EAAQb,WAG9C,wBACEN,UAAWC,IAAE4C,aACbpB,KAAK,SACLqB,QAAS,kBAAM3F,EAASQ,EAAcwD,EAAQvD,MAHhD,SAKE,cAAC,IAAD,CAAqBmF,MAAM,MAAMC,KAAK,aAVd7B,EAAQvD,aCZjCqF,MAjBf,WACE,OACE,sBAAKjD,UAAU,MAAf,UACE,2CAEA,cAAC,EAAD,UACE,cAAC,EAAD,MAGF,eAAC,EAAD,CAAWF,MAAM,WAAjB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,W,YCTRoD,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJC,SAASC,eAAe,U,kBCd1B5G,EAAOC,QAAU,CAAC,YAAc,iCAAiC,MAAQ,2BAA2B,MAAQ,2BAA2B,aAAe,qC","file":"static/js/main.aab7cc3b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__95DgK\",\"item\":\"ContactList_item__3frcE\",\"buttonDelete\":\"ContactList_buttonDelete__3VsQO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__R8mYZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__1vixs\"};","import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\n\nconst BASE_URL = 'https://618eb0d750e24d0017ce13d2.mockapi.io/api/contacts';\n\nexport const fetchContacts = createAsyncThunk(\n  'contacts/fetchContacts',\n\n  async function (_, { rejectWithValue, dispatch }) {\n\n    try {\n      const response = await fetch(BASE_URL);\n      if (!response.ok) {\n        throw new Error('error server!');\n      }\n      const data = await response.json();\n      return data;\n\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const removeContact = createAsyncThunk(\n  'contacts/remove',\n\n  async function (id, { rejectWithValue, dispatch }) {\n\n    try {\n      const response = await fetch(`${BASE_URL}/${id}`, {\n        method: 'DELETE',\n      });\n      \n      if (!response.ok) {\n        throw new Error(\"Can't delete contact!Error Server!\");\n      }\n\n      dispatch(deleteContact(id));\n      // const data = await response.json();      \n      return id;\n\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\nexport const addContact = createAsyncThunk(\n  'contacts/addcontact',\n\n  async function (contactNew, { rejectWithValue, dispatch }) {\n\n    try {\n      const response = await fetch(BASE_URL, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(contactNew),\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Can't add contact! Error Server!\");\n      }\n      \n      const data = await response.json();      \n      dispatch(addContactNew(data));     \n      return data;\n\n    } catch (error) {\n      return rejectWithValue(error.message);\n    }\n  },\n);\n\n// export const filterContact = createAsyncThunk(\n//     'contacts/filter',\n//     async function (value, { rejectWithValue, dispatch }) {\n//         try {\n//             const response = await fetch(`https://618eb0d750e24d0017ce13d2.mockapi.io/api/contacts?filter=${value}`, {\n//              metod:'GET',\n//             })\n//             // console.log(response)\n//          if (!response.ok) {\n//             throw new Error(\"Can't delete contact!Error Server!\");\n//          }\n//             dispatch(deleteContact({id}));\n\n//         } catch (error) {\n//              return rejectWithValue(error.message)\n//         }\n//     }\n// );\n\nconst setError = (state, action) => {\n  state.status = 'rejected';\n  state.error = action.payload;\n};\nconst setPending = state => {\n  // state.status = 'loading';\n  state.error = null;\n};\n\nconst contactSlice = createSlice({\n  name: 'contacts',\n  initialState: {\n    contacts: [],\n    filter: '',\n    status: null,\n    error: null,\n  },\n\n  reducers: {\n    addContactNew(state, action) {      \n      state.contacts = [action.payload, ...state.contacts];      \n    },\n\n    deleteContact(state, action) {\n      state.contacts = state.contacts.filter(({ id }) => id !== action.payload);     \n    },\n\n    changeFilter(state, action) {\n      state.filter = action.payload;\n    },\n  },\n\n  extraReducers: {\n    [fetchContacts.pending]: setPending,\n    [fetchContacts.fulfilled]: (state, action) => {\n      state.contacts = action.payload;      \n      state.status = 'resolved';   \n      state.error = null;      \n    },\n    [fetchContacts.rejected]: setError,\n\n    [addContact.pending]: setPending,\n    [addContact.fulfilled]: function (state, action) {\n      state.status = 'resolved';      \n      state.error = null;      \n    },\n    [addContact.rejected]: setError,\n\n    [removeContact.pending]: setPending,\n    [removeContact.fulfilled]: state => {\n      state.status = 'resolved';\n      state.error = null;\n    },\n    [removeContact.rejected]: setError,\n  },\n\n  // extraReducers: (builder) => {\n  //   builder\n  //     .addCase(fetchContacts.pending, (state, action) => {\n  //     state.status = 'loading';\n  //     state.error = null;\n  //     })\n  //   .addCase(fetchContacts.fulfilled, (state, action) => {\n  //      state.status = 'resolved';\n  //     console.log('super fetchContacts action.payload', action.payload)\n  //     console.log('super fetchContacts state.contacts', state.contacts)\n  //     // state.contacts.push(action.payload);\n  //     state.contacts = action.payload;\n  //     console.log('super fetchContacts state.contacts - 1 ', state.contacts)\n  //     state.error = null;\n  //   })\n  //    .addCase(fetchContacts.rejected, (state,action)=>{\n  //       state.status = 'rejected';\n  // state.error = action.payload;\n  //    })\n\n  //         .addCase(addContact.pending, (state, action) => {\n  //     state.status = 'loading';\n  //     state.error = null;\n  //     })\n  //   .addCase(addContact.fulfilled, (state, action) => {\n  //      state.status = 'resolved';\n  //     console.log('super addContacts action.payload', action.payload)\n  //     console.log('super dddContacts state.contacts', state.contacts)\n  //     // state.contacts = action.payload;\n  //      state.contacts.push(action.payload);\n  //     console.log('super fetchContacts state.contacts - 1 ', state.contacts)\n  //     state.error = null;\n  //   })\n  //    .addCase(addContact.rejected, (state,action)=>{\n  //       state.status = 'rejected';\n  // state.error = action.payload;\n  //    })\n\n  //     .addCase(removeContact.pending, (state, action) => {\n  //     state.status = 'loading';\n  //     state.error = null;\n  //     })\n  //   .addCase(removeContact.fulfilled, (state, action) => {\n  //     state.status = 'resolved';\n  //       state.error = null;\n  //   })\n  //    .addCase(removeContact.rejected, (state,action)=>{\n  //       state.status = 'rejected';\n  // state.error = action.payload;\n  //    })\n  // }\n});\n\nexport const { \n  addContactNew,\n  deleteContact,\n  changeFilter,\n} = contactSlice.actions;\nexport default contactSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\n\nimport contactReducer from './contactSlice';\n\nexport default configureStore({\n  reducer: {\n    contacts: contactReducer,    \n  },\n});\n","import PropTypes from 'prop-types';\nimport s from '../Container/Container.module.css';\n\nfunction Container({ title, children }) {\n  return (\n    <div className={s.container}>\n      <h2> {title}</h2>\n\n      {children}\n    </div>\n  );\n}\n\nContainer.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from 'react';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { addContact } from '../../store/contactSlice';\n\nimport s from '../ContactForm/ContactForm.module.css';\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [phone, setPhone] = useState('');\n  const contacts = useSelector(state => state.contacts.contacts);\n\n  const dispatch = useDispatch();\n\n  function handleChange(e) {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'phone':\n        setPhone(value);\n        break;\n\n      default:\n        return;\n    }\n  }\n\n  const reset = () => {\n    setName('');\n    setPhone('');\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      name: name,\n      phone: phone,\n    };\n\n    if (contacts) {\n      if (contacts.some(contact => contact.name.includes(name))) {\n        alert(`${name} is already in contacts!`);\n        reset();\n        return;\n      }\n    }\n\n    dispatch(addContact(newContact));\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={s.contactForm}>\n      <label className={s.label}>\n        Name:\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"name\"\n          autoComplete=\"off\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Tom Smit\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={s.label}>\n        Phone:\n        <input\n          className={s.input}\n          type=\"tel\"\n          name=\"phone\"\n          autoComplete=\"off\"\n          value={phone}\n          onChange={handleChange}\n          placeholder=\"050-50-50\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <input className={s.submitButton} type=\"submit\" value=\"Add contact\" />\n    </form>\n  );\n}\n\nexport default ContactForm;\n","export const getContacts = state => state.contacts.contacts;\nexport const getFilter = state => state.contacts.filter;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { getFilter } from 'store/contactsSelectors';\nimport { changeFilter } from 'store/contactSlice';\n\nimport s from '../Filter/Filter.module.css';\n\nconst Filter = () =>\n  \n  {\n    const dispatch = useDispatch();\n    const filter = useSelector(getFilter);\n   \n    return (\n      <label>\n        Find contact by name\n        <input\n          className={s.input}\n          type=\"text\"\n          name=\"filter\"\n          autoComplete=\"off\"        \n          value={filter}         \n          onChange={e => dispatch(changeFilter(e.currentTarget.value))}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n    );\n  };\n\nexport default Filter;\n\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { fetchContacts, removeContact } from 'store/contactSlice';\nimport { getContacts ,getFilter } from 'store/contactsSelectors';\n\nimport s from '../ContactList/ContactList.module.css';\nimport { TiUserDeleteOutline } from 'react-icons/ti';\n\nfunction ContactList() {\n  const { status, error } = useSelector(state => state.contacts);\n\n  const contacts = useSelector(getContacts);\n  const filter = useSelector(getFilter);\n\n  const dispatch = useDispatch();  \n\n  useEffect(() => {\n    dispatch(fetchContacts());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const normalizedFilter = filter.toLowerCase();\n  const visibleContacts = contacts.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n\n\n  return (\n    <div>\n      {status === 'loading' && <h2>Loading</h2>}\n      {status === 'rejected' && <h2>Ups..{error}</h2>}\n \n      <ul className={s.list}>      \n        {contacts.length > 0 &&         \n          visibleContacts.map(contact => (\n            <li className={s.item} key={contact.id}>\n              <p>\n                <span>{contact.name}:</span> <span>{contact.phone}</span>\n              </p>\n\n              <button\n                className={s.buttonDelete}\n                type=\"button\"               \n                onClick={() => dispatch(removeContact(contact.id))}\n              >\n                <TiUserDeleteOutline color=\"red\" size=\"18px\" />\n              </button>\n            </li>\n          ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default ContactList;\n\n","import './App.css';\n\nimport Container from './components/Container/Container';\nimport ContactForm from './components/ContactForm/ContactForm';\nimport Filter from './components/Filter/Filter';\nimport ContactList from './components/ContactList/ContactList';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n\n      <Container>\n        <ContactForm />\n      </Container>\n\n      <Container title=\"Contacts\">\n        <Filter />\n        <ContactList />\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport store from './store';\nimport App from './App';\nimport './index.css';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2ozP3\",\"label\":\"ContactForm_label__1vRCe\",\"input\":\"ContactForm_input__1o0JM\",\"submitButton\":\"ContactForm_submitButton__NjFKd\"};"],"sourceRoot":""}